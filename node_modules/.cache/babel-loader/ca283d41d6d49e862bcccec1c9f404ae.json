{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/zavrsni/result-tracker-frontend-deprecated/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const [teamsData, setTeamsData] = useState({});\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch(\"http://127.0.0.1:5000/teams\").then(resp => resp.json()).then(data => this.setTeamsData());\n      console.log(teamsData);\n    }, 60000);\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Team Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Games Played\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Wins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Draws\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Losses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Goals For\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Goals Against\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), teamsData.map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.team_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.games_played\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.wins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.draws\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.losses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.goals_for\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.goals_against\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: val.points\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"jSMDrkISS3tWxs9W3pRaGveC7D4=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useEffect","useState","Table","teamsData","setTeamsData","interval","setInterval","fetch","then","resp","json","data","console","log","clearInterval","map","val","key","team_name","games_played","wins","draws","losses","goals_for","goals_against","points"],"sources":["/home/marin/Documents/zavrsni/result-tracker-frontend-deprecated/src/components/Table/Table.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Table() {\n  const [teamsData, setTeamsData] = useState({});\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetch(\"http://127.0.0.1:5000/teams\")\n        .then((resp) => resp.json())\n        .then((data) => this.setTeamsData());\n      console.log(teamsData);\n    }, 60000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  return (\n    <table>\n      <tr>\n        <th>Team Name</th>\n        <th>Games Played</th>\n        <th>Wins</th>\n        <th>Draws</th>\n        <th>Losses</th>\n        <th>Goals For</th>\n        <th>Goals Against</th>\n        <th>Points</th>\n      </tr>\n      {teamsData.map((val, key) => {\n        return (\n          <tr key={key}>\n            <td>{val.team_name}</td>\n            <td>{val.games_played}</td>\n            <td>{val.wins}</td>\n            <td>{val.draws}</td>\n            <td>{val.losses}</td>\n            <td>{val.goals_for}</td>\n            <td>{val.goals_against}</td>\n            <td>{val.points}</td>\n          </tr>\n        );\n      })}\n    </table>\n  );\n}\n\nexport default Table;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCC,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESG,IAAD,IAAU,KAAKP,YAAL,EAFlB;MAGAQ,OAAO,CAACC,GAAR,CAAYV,SAAZ;IACD,CAL2B,EAKzB,KALyB,CAA5B;IAOA,OAAO,MAAMW,aAAa,CAACT,QAAD,CAA1B,CARc,CAQwB;EACvC,CATQ,EASN,EATM,CAAT;EAWA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPF,eAQE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAWGF,SAAS,CAACY,GAAV,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;MAC3B,oBACE;QAAA,wBACE;UAAA,UAAKD,GAAG,CAACE;QAAT;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAKF,GAAG,CAACG;QAAT;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,UAAKH,GAAG,CAACI;QAAT;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,UAAKJ,GAAG,CAACK;QAAT;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAKL,GAAG,CAACM;QAAT;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA,UAAKN,GAAG,CAACO;QAAT;UAAA;UAAA;UAAA;QAAA,QANF,eAOE;UAAA,UAAKP,GAAG,CAACQ;QAAT;UAAA;UAAA;UAAA;QAAA,QAPF,eAQE;UAAA,UAAKR,GAAG,CAACS;QAAT;UAAA;UAAA;UAAA;QAAA,QARF;MAAA,GAASR,GAAT;QAAA;QAAA;QAAA;MAAA,QADF;IAYD,CAbA,CAXH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD;;GA1CQf,K;;KAAAA,K;AA4CT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}