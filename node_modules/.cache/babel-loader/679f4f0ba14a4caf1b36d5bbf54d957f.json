{"ast":null,"code":"var _jsxFileName = \"/home/marin/Documents/zavrsni/result-tracker-frontend/result-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages\";\nimport EditTournament from \"./pages/editTournament\";\nimport Tournament from \"./pages/tournament\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tournaments, setTournament] = useState([]);\n  useEffect(() => {\n    const getTournaments = async () => {\n      const tournamentsFromServer = await fetchTournaments();\n      setTournaments(tournamentsFromServer);\n    };\n\n    getTournaments();\n  }, []); // Fetch Tournaments\n\n  const fetchTournaments = async () => {\n    const res = await fetch(\"http://localhost:5000/tournaments\");\n    const data = await res.json();\n    return data;\n  }; // Fetch Tournament\n\n\n  const fetchTournament = async id => {\n    const res = await fetch(`http://localhost:5000/tournament/${id}`);\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  }; // Delete Task\n\n\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\"\n    }); //We should control the response status to decide if we will change the state or not.\n\n    res.status === 200 ? setTasks(tasks.filter(task => task.id !== id)) : alert(\"Error Deleting This Task\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-tournament\",\n        element: /*#__PURE__*/_jsxDEV(EditTournament, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tournament\",\n        element: /*#__PURE__*/_jsxDEV(Tournament, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"S9YHGgiGN7qV+wvJYW+FWE8fxKg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Home","EditTournament","Tournament","App","tournaments","setTournament","useState","useEffect","getTournaments","tournamentsFromServer","fetchTournaments","setTournaments","res","fetch","data","json","fetchTournament","id","addTask","task","method","headers","body","JSON","stringify","setTasks","tasks","deleteTask","status","filter","alert"],"sources":["/home/marin/Documents/zavrsni/result-tracker-frontend/result-tracker/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages\";\nimport EditTournament from \"./pages/editTournament\";\nimport Tournament from \"./pages/tournament\";\n\nconst App = () => {\n  const [tournaments, setTournament] = useState([]);\n\n  useEffect(() => {\n    const getTournaments = async () => {\n      const tournamentsFromServer = await fetchTournaments();\n      setTournaments(tournamentsFromServer);\n    };\n\n    getTournaments();\n  }, []);\n\n  // Fetch Tournaments\n  const fetchTournaments = async () => {\n    const res = await fetch(\"http://localhost:5000/tournaments\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Tournament\n  const fetchTournament = async (id) => {\n    const res = await fetch(`http://localhost:5000/tournament/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  };\n\n  // Delete Task\n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n    //We should control the response status to decide if we will change the state or not.\n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert(\"Error Deleting This Task\");\n  };\n\n  return (\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/edit-tournament\" element={<EditTournament />} />\n        <Route path=\"/tournament\" element={<Tournament />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,WAAD,EAAcC,aAAd,IAA+BC,QAAQ,CAAC,EAAD,CAA7C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMC,cAAc,GAAG,YAAY;MACjC,MAAMC,qBAAqB,GAAG,MAAMC,gBAAgB,EAApD;MACAC,cAAc,CAACF,qBAAD,CAAd;IACD,CAHD;;IAKAD,cAAc;EACf,CAPQ,EAON,EAPM,CAAT,CAHgB,CAYhB;;EACA,MAAME,gBAAgB,GAAG,YAAY;IACnC,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;IACA,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEA,OAAOD,IAAP;EACD,CALD,CAbgB,CAoBhB;;;EACA,MAAME,eAAe,GAAG,MAAOC,EAAP,IAAc;IACpC,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,oCAAmCI,EAAG,EAAxC,CAAvB;IACA,MAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEA,OAAOD,IAAP;EACD,CALD,CArBgB,CA4BhB;;;EACA,MAAMI,OAAO,GAAG,MAAOC,IAAP,IAAgB;IAC9B,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;MACrDO,MAAM,EAAE,MAD6C;MAErDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF4C;MAKrDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;IAL+C,CAAhC,CAAvB;IAQA,MAAML,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;IAEAU,QAAQ,CAAC,CAAC,GAAGC,KAAJ,EAAWZ,IAAX,CAAD,CAAR,CAX8B,CAa9B;IACA;IACA;EACD,CAhBD,CA7BgB,CA+ChB;;;EACA,MAAMa,UAAU,GAAG,MAAOV,EAAP,IAAc;IAC/B,MAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BI,EAAG,EAAnC,EAAsC;MAC3DG,MAAM,EAAE;IADmD,CAAtC,CAAvB,CAD+B,CAI/B;;IACAR,GAAG,CAACgB,MAAJ,KAAe,GAAf,GACIH,QAAQ,CAACC,KAAK,CAACG,MAAN,CAAcV,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CADZ,GAEIa,KAAK,CAAC,0BAAD,CAFT;EAGD,CARD;;EAUA,oBACE,QAAC,MAAD;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAsB,OAAO,eAAE,QAAC,IAAD;UAAA;UAAA;UAAA;QAAA;MAA/B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,kBAAZ;QAA+B,OAAO,eAAE,QAAC,cAAD;UAAA;UAAA;UAAA;QAAA;MAAxC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,aAAZ;QAA0B,OAAO,eAAE,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA;MAAnC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAnED;;GAAM3B,G;;KAAAA,G;AAqEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}